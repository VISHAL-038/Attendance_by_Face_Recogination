{"version":3,"sources":["index.ts"],"names":["interval","refreshCounter","count","counter","Streamlit","events","addEventListener","RENDER_EVENT","event","document","body","innerHTML","data","detail","refreshLimit","args","limit","parseInt","refreshInterval","debounce","clearInterval","window","setInterval","newCount","Math","min","Number","MAX_SAFE_INTEGER","setComponentValue","setComponentReady","setFrameHeight"],"mappings":"6KAAA,kBAWA,IACIA,EADEC,EATN,WACE,IAAIC,EAAQ,EAEZ,OAAO,WAEL,OADAA,GAAS,GAKUC,GAoCvBC,IAAUC,OAAOC,iBAAiBF,IAAUG,cA5B5C,SAAkBC,GAChBC,SAASC,KAAKC,UAAY,GAE1B,IAAMC,EAAQJ,EAAkCK,OAC1CC,EAAeF,EAAKG,KAAKC,MAAQC,SAASL,EAAKG,KAAKC,MAAO,IAAM,KACjEE,EAAkBD,SAASL,EAAKG,KAAKf,SAAU,IACrD,GAAIA,EAAU,CACZ,IAAIY,EAAKG,KAAKI,SAIZ,OAHAC,cAAcpB,GAOlBA,EAAWqB,OAAOC,aAAY,WAC5B,IAAMC,EAAWC,KAAKC,IAAIxB,IAAkByB,OAAOC,mBAE9Cb,GAAgBS,EAAWT,EAC9BV,IAAUwB,kBAAkBL,GAG5BH,cAAcpB,KAEfkB,MAQLd,IAAUyB,oBAIVzB,IAAU0B,eAAe,K","file":"static/js/main.ec9ffac2.chunk.js","sourcesContent":["import { Streamlit, RenderData } from \"streamlit-component-lib\"\n\nfunction counter(): () => number {\n  let count = 0\n\n  return function (): number {\n    count += 1\n    return count\n  }\n}\n\nconst refreshCounter = counter()\nlet interval: number\n\n/**\n * The component's render function. This will be called immediately after\n * the component is initially loaded, and then again every time the\n * component gets new data from Python.\n */\nfunction onRender(event: Event): void {\n  document.body.innerHTML = \"\"\n  // Get the RenderData from the event\n  const data = (event as CustomEvent<RenderData>).detail\n  const refreshLimit = data.args.limit ? parseInt(data.args.limit, 10) : null\n  const refreshInterval = parseInt(data.args.interval, 10)\n  if (interval) {\n    if (data.args.debounce) {\n      clearInterval(interval)\n    } else {\n      // We already have an interval so clear the screen.\n      return\n    }\n  }\n\n  interval = window.setInterval(() => {\n    const newCount = Math.min(refreshCounter(), Number.MAX_SAFE_INTEGER)\n    // There is no refresh counter or we are within the limit\n    if (!refreshLimit || newCount < refreshLimit) {\n      Streamlit.setComponentValue(newCount)\n    } else {\n      // No need to keep pinging, so clear the interval\n      clearInterval(interval)\n    }\n  }, refreshInterval)\n}\n\n// Attach our `onRender` handler to Streamlit's render event.\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\n\n// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\nStreamlit.setComponentReady()\n\n// Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\nStreamlit.setFrameHeight(0)\n"],"sourceRoot":""}